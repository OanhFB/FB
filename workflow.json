{
  "schema": "v3",
  "id": "",
  "displayName": "",
  "title": "nf-core/ampliseq pipeline parameters",
  "workflowVersion": "",
  "categories": [],
  "description": "Amplicon sequencing analysis workflow using DADA2 and QIIME2",
  "inputs": {
    "input": {
      "title": "",
      "required": false,
      "description": "Path to tab-separated sample sheet",
      "default": "",
      "help_text": "Path to sample sheet, either tab-separated (.tsv), comma-separated (.csv), or in YAML format (.yml/.yaml), that points to compressed fastq files.\n\nThe sample sheet must have two to four tab-separated columns/entries with the following headers: \n- `sampleID` (required): Unique sample IDs, must start with a letter, and can only contain letters, numbers or underscores\n- `forwardReads` (required): Paths to (forward) reads zipped FastQ files\n- `reverseReads` (optional): Paths to reverse reads zipped FastQ files, required if the data is paired-end\n- `run` (optional): If the data was produced by multiple sequencing runs, any string\n\nRelated parameters are:\n- `--pacbio` and `--iontorrent` if the sequencing data is PacBio data or IonTorrent data (default expected: paired-end Illumina data)\n- `--single_end` if the sequencing data is single-ended Illumina data (default expected: paired-end Illumina data)\n- Choose an appropriate reference taxonomy for the type of amplicon (16S/18S/ITS/CO1) (default: DADA2 assignTaxonomy and 16S rRNA sequence database)",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "input_fasta": {
      "title": "",
      "required": false,
      "description": "Path to ASV/OTU fasta file",
      "default": "",
      "help_text": "Path to fasta format file with sequences that will be taxonomically classified. The fasta file input option can be used to taxonomically classify previously produced ASV/OTU sequences.\n\nThe fasta sequence header line may contain a description, that will be kept as part of the sequence name. However, tabs will be changed into spaces.\n\nRelated parameters are:\n- Choose an appropriate reference taxonomy for the type of amplicon (16S/18S/ITS/CO1) (default: DADA2 assignTaxonomy and 16S rRNA sequence database)",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "input_folder": {
      "title": "",
      "required": false,
      "description": "Path to folder containing zipped FastQ files",
      "default": "",
      "help_text": "Path to folder containing compressed fastq files.\n\nExample for input data organization from one sequencing run with two samples, paired-end data:\n\n```bash\ndata\n  ├─sample1_1_L001_R1_001.fastq.gz\n  ├─sample1_1_L001_R2_001.fastq.gz\n  ├─sample2_1_L001_R1_001.fastq.gz\n  └─sample2_1_L001_R2_001.fastq.gz\n```\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The folder must contain gzip compressed demultiplexed fastq files. If the file names do not follow the default (`\"/*_R{1,2}_001.fastq.gz\"`), please check `--extension`.\n3. Sample identifiers are extracted from file names, i.e. the string before the first underscore `_`, these must be unique\n4. If your data is scattered, produce a sample sheet\n5. All sequencing data should originate from one sequencing run, because processing relies on run-specific error models that are unreliable when data from several sequencing runs are mixed. Sequencing data originating from multiple sequencing runs requires additionally the parameter `--multiple_sequencing_runs` and a specific folder structure.\n\nRelated parameters are:\n- `--pacbio` and `--iontorrent` if the sequencing data is PacBio data or IonTorrent data (default expected: paired-end Illumina data)\n- `--single_end` if the sequencing data is single-ended Illumina data (default expected: paired-end Illumina data)\n- `--multiple_sequencing_runs` if the sequencing data originates from multiple sequencing runs\n- `--extension` if the sequencing file names do not follow the default (`\"/*_R{1,2}_001.fastq.gz\"`)\n- Choose an appropriate reference taxonomy for the type of amplicon (16S/18S/ITS/CO1) (default: DADA2 assignTaxonomy and 16S rRNA sequence database)",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "FW_primer": {
      "title": "",
      "required": false,
      "description": "Forward primer sequence",
      "default": "",
      "help_text": "In amplicon sequencing methods, PCR with specific primers produces the amplicon of interest. These primer sequences need to be trimmed from the reads before further processing and are also required for producing an appropriate classifier. Do not use here any technical sequence such as adapter sequences but only the primer sequence that matches the biological amplicon.\n\nFor example:\n\n```bash\n--FW_primer \"GTGYCAGCMGCCGCGGTAA\" --RV_primer \"GGACTACNVGGGTWTCTAAT\"\n```",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "RV_primer": {
      "title": "",
      "required": false,
      "description": "Reverse primer sequence",
      "default": "",
      "help_text": "In amplicon sequencing methods, PCR with specific primers produces the amplicon of interest. These primer sequences need to be trimmed from the reads before further processing and are also required for producing an appropriate classifier. Do not use here any technical sequence such as adapter sequences but only the primer sequence that matches the biological amplicon.\n\nFor example:\n\n```bash\n--FW_primer GTGYCAGCMGCCGCGGTAA --RV_primer GGACTACNVGGGTWTCTAAT\n```",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "metadata": {
      "title": "",
      "required": false,
      "description": "Path to metadata sheet, when missing most downstream analysis are skipped (barplots, PCoA plots, ...).",
      "default": "",
      "help_text": "This is optional, but for performing downstream analysis such as barplots, diversity indices or differential abundance testing, a metadata file is essential.\n\nRelated parameter:\n- `--metadata_category` (optional) to choose columns that are used for testing significance\n\nFor example:\n\n```bash\n--metadata \"path/to/metadata.tsv\"\n```\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The metadata file has to follow the QIIME2 specifications (https://docs.qiime2.org/2021.2/tutorials/metadata/)\n\nThe first column in the tab-separated metadata file is the sample identifier column (required header: `ID`) and defines the sample or feature IDs associated with your study. In addition to the sample identifier column, the metadata file is required to have at least one column with multiple different non-numeric values but not all unique.\n**NB**: without additional columns there might be no groupings for the downstream analyses.\n\nSample identifiers should be 36 characters long or less, and also contain only ASCII alphanumeric characters (i.e. in the range of [a-z], [A-Z], or [0-9]), or the dash (-) character. For downstream analysis, by default all numeric columns, blanks or NA are removed, and only columns with multiple different values but not all unique are selected.\n\nThe columns which are to be assessed can be specified by `--metadata_category`. If `--metadata_category` isn't specified than all columns that fit the specification are automatically chosen.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "outdir": {
      "title": "",
      "required": true,
      "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "format": "dir-path"
    },
    "email": {
      "title": "",
      "required": false,
      "description": "Email address for completion summary.",
      "default": "",
      "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
      "hidden": false,
      "type": "string",
      "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
    },
    "illumina_novaseq": {
      "title": "",
      "required": false,
      "description": "If data has binned quality scores such as Illumina NovaSeq",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "pacbio": {
      "title": "",
      "required": false,
      "description": "If data is single-ended PacBio reads instead of Illumina",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "iontorrent": {
      "title": "",
      "required": false,
      "description": "If data is single-ended IonTorrent reads instead of Illumina",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "single_end": {
      "title": "",
      "required": false,
      "description": "If data is single-ended Illumina reads instead of paired-end",
      "default": "",
      "help_text": "When using a sample sheet with `--input` containing forward and reverse reads, specifying `--single_end` will only extract forward reads and treat the data as single ended instead of extracting forward and reverse reads.",
      "hidden": false,
      "type": "boolean"
    },
    "illumina_pe_its": {
      "title": "",
      "required": false,
      "description": "If analysing ITS amplicons or any other region with large length variability with Illumina paired end reads",
      "default": "",
      "help_text": "This will cause the pipeline to\n- not truncate input reads if not `--trunclenf` and `--trunclenr` are overwriting defaults\n- remove reverse complement primers from the end of reads in case the read length exceeds the amplicon length",
      "hidden": false,
      "type": "boolean"
    },
    "multiple_sequencing_runs": {
      "title": "",
      "required": false,
      "description": "If using `--input_folder`: samples were sequenced in multiple sequencing runs",
      "default": "",
      "help_text": "Expects one sub-folder per sequencing run in the folder specified by `--input_folder` containing sequencing data of the specific run.\nSample identifiers are taken from sequencing files, specifically the string before the first underscore will be the sample ID. Sample IDs across all sequencing runs (all sequencing files) have to be unique. If this is not the case, please use a sample sheet as input instead.\n\nExample for input data organization:\n\n```bash\ndata\n  |-run1\n  |  |-sample1_1_L001_R1_001.fastq.gz\n  |  |-sample1_1_L001_R2_001.fastq.gz\n  |  |-sample2_1_L001_R1_001.fastq.gz\n  |  |-sample2_1_L001_R2_001.fastq.gz\n  |\n  |-run2\n     |-sample3_1_L001_R1_001.fastq.gz\n     |-sample3_1_L001_R2_001.fastq.gz\n     |-sample4_1_L001_R1_001.fastq.gz\n     |-sample4_1_L001_R2_001.fastq.gz\n```\n\nExample command to analyze this data in one pipeline run:\n\n```bash\nnextflow run nf-core/ampliseq \\\n    -profile singularity \\\n    --input_folder \"data\" \\\n    --FW_primer \"GTGYCAGCMGCCGCGGTAA\" \\\n    --RV_primer \"GGACTACNVGGGTWTCTAAT\" \\\n    --metadata \"data/Metadata.tsv\" \\\n    --multiple_sequencing_runs\n```",
      "hidden": false,
      "type": "boolean"
    },
    "extension": {
      "title": "",
      "required": false,
      "description": "If using `--input_folder`: naming of sequencing files",
      "default": "/*_R{1,2}_001.fastq.gz",
      "help_text": "Indicates the naming of sequencing files (default: `\"/*_R{1,2}_001.fastq.gz\"`).\n\nPlease note:\n\n1. The prepended slash (`/`) is required\n2. The star (`*`) is the required wildcard for sample names\n3. The curly brackets (`{}`) enclose the orientation for paired end reads, separated by a comma (`,`).\n4. The pattern must be enclosed in quotes\n\nFor example for one sample (name: `1`) with forward (file: `1_a.fastq.gz`) and reverse (file: `1_b.fastq.gz`) reads in folder `data`:\n\n```bash\n--input_folder \"data\" --extension \"/*_{a,b}.fastq.gz\"\n```",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "min_read_counts": {
      "title": "",
      "required": false,
      "description": "Set read count threshold for failed samples.",
      "default": 1,
      "help_text": "Samples with less reads than this threshold at input or after trimming stop the pipeline. Using `--ignore_empty_input_files` or `--ignore_failed_trimming ignores` samples with read numbers below the threshold and lets the pipeline continue with less samples.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "ignore_empty_input_files": {
      "title": "",
      "required": false,
      "description": "Ignore input files with too few reads.",
      "default": "",
      "help_text": "Ignore input files with less reads than specified by `--min_read_counts` and continue the pipeline without those samples.",
      "hidden": false,
      "type": "boolean"
    },
    "retain_untrimmed": {
      "title": "",
      "required": false,
      "description": "Cutadapt will retain untrimmed reads, choose only if input reads are not expected to contain primer sequences.",
      "default": "",
      "help_text": "When read sequences are trimmed, untrimmed read pairs are discarded routinely. Use this option to retain untrimmed read pairs. This is usually not recommended and is only of advantage for specific protocols that prevent sequencing PCR primers. ",
      "hidden": false,
      "type": "boolean"
    },
    "cutadapt_min_overlap": {
      "title": "",
      "required": false,
      "description": "Sets the minimum overlap for valid matches of primer sequences with reads for cutadapt (-O).",
      "default": 3,
      "help_text": "",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "cutadapt_max_error_rate": {
      "title": "",
      "required": false,
      "description": "Sets the maximum error rate for valid matches of primer sequences with reads for cutadapt (-e).",
      "default": 0.1,
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "double_primer": {
      "title": "",
      "required": false,
      "description": "Cutadapt will be run twice to ensure removal of potential double primers",
      "default": "",
      "help_text": "Cutdapt will be run twice, first to remove reads without primers (default), then a second time to remove reads that erroneously contain a second set of primers, not to be used with `--retain_untrimmed`.",
      "hidden": false,
      "type": "boolean"
    },
    "ignore_failed_trimming": {
      "title": "",
      "required": false,
      "description": "Ignore files with too few reads after trimming.",
      "default": "",
      "help_text": "Ignore files with less reads than specified by `--min_read_counts` after trimming and continue the pipeline without those samples.",
      "hidden": false,
      "type": "boolean"
    },
    "trunclenf": {
      "title": "",
      "required": false,
      "description": "DADA2 read truncation value for forward strand, set this to 0 for no truncation",
      "default": "",
      "help_text": "Read denoising by DADA2 creates an error profile specific to a sequencing run and uses this to correct sequencing errors. This method prefers when all reads to have the same length and as high quality as possible while maintaining at least 20 bp overlap for merging. One cutoff for the forward read `--trunclenf` and one for the reverse read `--trunclenr` truncate all longer reads at that position and drop all shorter reads.\nIf not set, these cutoffs will be determined automatically for the position before the mean quality score drops below `--trunc_qmin`.\n\nFor example:\n\n```bash\n--trunclenf 180 --trunclenr 120\n```\n\nPlease note:\n\n1. Overly aggressive truncation might lead to insufficient overlap for read merging\n2. Too little truncation might reduce denoised reads\n3. The code choosing these values automatically cannot take the points above into account, therefore checking read numbers is essential",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "trunclenr": {
      "title": "",
      "required": false,
      "description": "DADA2 read truncation value for reverse strand, set this to 0 for no truncation",
      "default": "",
      "help_text": "Read denoising by DADA2 creates an error profile specific to a sequencing run and uses this to correct sequencing errors. This method prefers when all reads to have the same length and as high quality as possible while maintaining at least 20 bp overlap for merging. One cutoff for the forward read `--trunclenf` and one for the reverse read `--trunclenr` truncate all longer reads at that position and drop all shorter reads.\nIf not set, these cutoffs will be determined automatically for the position before the mean quality score drops below `--trunc_qmin`.\n\nFor example:\n\n```bash\n--trunclenf 180 --trunclenr 120\n```\n\nPlease note:\n\n1. Overly aggressive truncation might lead to insufficient overlap for read merging\n2. Too little truncation might reduce denoised reads\n3. The code choosing these values automatically cannot take the points above into account, therefore checking read numbers is essential",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "trunc_qmin": {
      "title": "",
      "required": false,
      "description": "If --trunclenf and --trunclenr are not set, these values will be automatically determined using this median quality score",
      "default": 25,
      "help_text": "Automatically determine `--trunclenf` and `--trunclenr` before the median quality score drops below `--trunc_qmin`. The fraction of reads retained is defined by `--trunc_rmin`, which might override the quality cutoff.\n\nFor example:\n\n```bash\n--trunc_qmin 35\n```\n\nPlease note:\n\n1. The code choosing `--trunclenf` and `--trunclenr` using `--trunc_qmin` automatically cannot take amplicon length or overlap requirements for merging into account, therefore use with caution.\n2. A minimum value of 25 is recommended. However, high quality data with a large paired sequence overlap might justify a higher value (e.g. 35). Also, very low quality data might require a lower value.\n3. If the quality cutoff is too low to include a certain fraction of reads that is specified by `--trunc_rmin` (e.g. 0.75 means at least 75% percent of reads are retained), a lower cutoff according to `--trunc_rmin` superseeds the quality cutoff.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "trunc_rmin": {
      "title": "",
      "required": false,
      "description": "Assures that values chosen with --trunc_qmin will retain a fraction of reads.",
      "default": 0.75,
      "help_text": "Value can range from 0 to 1. 0 means no reads need to be retained and 1 means all reads need to be retained. The minimum lengths of --trunc_qmin and --trunc_rmin are chosen as DADA2 cutoffs.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "max_ee": {
      "title": "",
      "required": false,
      "description": "DADA2 read filtering option",
      "default": 2,
      "help_text": "After truncation, reads with higher than `max_ee` \"expected errors\" will be discarded. In case of very long reads, you might want to increase this value.  We recommend (to start with) a value corresponding to approximately 1 expected error per 100-200 bp (default: 2)",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "min_len": {
      "title": "",
      "required": false,
      "description": "DADA2 read filtering option",
      "default": 50,
      "help_text": "Remove reads with length less than `min_len` after trimming and truncation.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "max_len": {
      "title": "",
      "required": false,
      "description": "DADA2 read filtering option",
      "default": "",
      "help_text": "Remove reads with length greater than `max_len` after trimming and truncation. Must be a positive integer.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "ignore_failed_filtering": {
      "title": "",
      "required": false,
      "description": "Ignore files with too few reads after quality filtering.",
      "default": "",
      "help_text": "Ignore files with fewer reads than specified by `--min_read_counts` after trimming and continue the pipeline without those samples. Please review all quality trimming and filtering options before using this parameter. For example, one sample with shorter sequences than other samples might loose all sequences due to minimum length requirements by read truncation (see --trunclenf).",
      "hidden": false,
      "type": "boolean"
    },
    "sample_inference": {
      "title": "",
      "required": false,
      "description": "Mode of sample inference: \"independent\", \"pooled\" or \"pseudo\"",
      "default": "independent",
      "help_text": "If samples are treated independent (lowest sensitivity and lowest resources), pooled (highest sensitivity and resources) or pseudo-pooled (balance between required resources and sensitivity).",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "independent",
          "name": "independent"
        },
        {
          "id": "pooled",
          "name": "pooled"
        },
        {
          "id": "pseudo",
          "name": "pseudo"
        }
      ]
    },
    "concatenate_reads": {
      "title": "",
      "required": false,
      "description": "Not recommended: When paired end reads are not sufficiently overlapping for merging.",
      "default": "",
      "help_text": "This parameters specifies that paired-end reads are not merged after denoising but concatenated (separated by 10 N's). This is of advantage when an amplicon was sequenced that is too long for merging (i.e. bad experimental design). This is an alternative to only analyzing the forward or reverse read in case of non-overlapping paired-end sequencing data.\n\n**This parameter is not recommended! Only if all other options fail.**",
      "hidden": false,
      "type": "boolean"
    },
    "vsearch_cluster": {
      "title": "",
      "required": false,
      "description": "Post-cluster ASVs with VSEARCH",
      "default": "",
      "help_text": "ASVs will be clustered with VSEARCH using the id value found in `--vsearch_cluster_id`.",
      "hidden": false,
      "type": "boolean"
    },
    "vsearch_cluster_id": {
      "title": "",
      "required": false,
      "description": "Pairwise Identity value used when post-clustering ASVs if `--vsearch_cluster` option is used (default: 0.97).",
      "default": 0.97,
      "help_text": "Lowering or increasing this value can change the number ASVs left over after clustering.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "filter_ssu": {
      "title": "",
      "required": false,
      "description": "Enable SSU filtering. Comma separated list of kingdoms (domains) in Barrnap, a combination (or one) of \"bac\", \"arc\", \"mito\", and \"euk\". ASVs that have their lowest evalue in that kingdoms are kept.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "bac,arc,mito,euk",
          "name": "bac,arc,mito,euk"
        },
        {
          "id": "bac",
          "name": "bac"
        },
        {
          "id": "arc",
          "name": "arc"
        },
        {
          "id": "mito",
          "name": "mito"
        },
        {
          "id": "euk",
          "name": "euk"
        },
        {
          "id": "bac,arc",
          "name": "bac,arc"
        },
        {
          "id": "bac,mito",
          "name": "bac,mito"
        },
        {
          "id": "bac,euk",
          "name": "bac,euk"
        },
        {
          "id": "arc,mito",
          "name": "arc,mito"
        },
        {
          "id": "arc,euk",
          "name": "arc,euk"
        },
        {
          "id": "mito,euk",
          "name": "mito,euk"
        },
        {
          "id": "bac,arc,mito",
          "name": "bac,arc,mito"
        },
        {
          "id": "bac,mito,euk",
          "name": "bac,mito,euk"
        },
        {
          "id": "arc,mito,euk",
          "name": "arc,mito,euk"
        }
      ]
    },
    "min_len_asv": {
      "title": "",
      "required": false,
      "description": "Minimal ASV length",
      "default": "",
      "help_text": "Remove ASV that are below the minimum length threshold (default: filter is disabled, otherwise 1). Increasing the threshold might reduce false positive ASVs (e.g. PCR off-targets).",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "max_len_asv": {
      "title": "",
      "required": false,
      "description": "Maximum ASV length",
      "default": "",
      "help_text": "Remove ASV that are above the maximum length threshold (default: filter is disabled, otherwise 1000000). Lowering the threshold might reduce false positive ASVs (e.g. PCR off-targets).",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "filter_codons": {
      "title": "",
      "required": false,
      "description": "Filter ASVs based on codon usage",
      "default": "",
      "help_text": "ASVs will be filtered to contain no stop codon in their coding sequence and that their length is a multiple of 3.",
      "hidden": false,
      "type": "boolean"
    },
    "orf_start": {
      "title": "",
      "required": false,
      "description": "Starting position of codon tripletts",
      "default": 1,
      "help_text": "By default, when `--filter_codons` is set, the codons start from the first position of the ASV sequences. The start of the codons can be changed to any position.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "orf_end": {
      "title": "",
      "required": false,
      "description": "Ending position of codon tripletts",
      "default": "",
      "help_text": "By default, when `--filter_codons` is set, the codons are checked until the end of the ASV sequences. If you would like to change this setting, you can specify until which position of the ASV sequences the codon triplets are checked.\n\nPlease note that the length of the ASV from the beginning or from the `--orf_start` until this position must be a multiple of 3.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "stop_codons": {
      "title": "",
      "required": false,
      "description": "Define stop codons",
      "default": "TAA,TAG",
      "help_text": "By default, when `--filter_codons` is set, the codons `TAA,TAG` are set as stop codons. Here you can specify any comma-separated list of codons to be used as stop codons, e.g. `--stop_codons \"TAA,TAG,TGA\"`",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "dada_ref_taxonomy": {
      "title": "",
      "required": false,
      "description": "Name of supported database, and optionally also version number",
      "default": "silva=138",
      "help_text": "Choose any of the supported databases, and optionally also specify the version. Database and version are separated by an equal sign (`=`, e.g. `silva=138`) . This will download the desired database, format it to produce a file that is compatible with DADA2's assignTaxonomy and another file that is compatible with DADA2's addSpecies.\n\nThe following databases are supported:\n- GTDB - Genome Taxonomy Database - 16S rRNA\n- SBDI-GTDB, a Sativa-vetted version of the GTDB 16S rRNA\n- PR2 - Protist Reference Ribosomal Database - 18S rRNA\n- RDP - Ribosomal Database Project - 16S rRNA\n- SILVA ribosomal RNA gene database project - 16S rRNA\n- UNITE - eukaryotic nuclear ribosomal ITS region - ITS\n- COIDB - eukaryotic Cytochrome Oxidase I (COI) from The Barcode of Life Data System (BOLD) - COI\n\nGenerally, using `gtdb`, `pr2`, `rdp`, `sbdi-gtdb`, `silva`, `coidb`, `unite-fungi`, or `unite-alleuk` will select the most recent supported version.\n\nPlease note that commercial/non-academic entities [require licensing](https://www.arb-silva.de/silva-license-information) for SILVA v132 database (non-default) but not from v138 on (default).",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "coidb",
          "name": "coidb"
        },
        {
          "id": "coidb=221216",
          "name": "coidb=221216"
        },
        {
          "id": "gtdb",
          "name": "gtdb"
        },
        {
          "id": "gtdb=R05-RS95",
          "name": "gtdb=R05-RS95"
        },
        {
          "id": "gtdb=R06-RS202",
          "name": "gtdb=R06-RS202"
        },
        {
          "id": "gtdb=R07-RS207",
          "name": "gtdb=R07-RS207"
        },
        {
          "id": "gtdb=R08-RS214",
          "name": "gtdb=R08-RS214"
        },
        {
          "id": "midori2-co1",
          "name": "midori2-co1"
        },
        {
          "id": "midori2-co1=gb250",
          "name": "midori2-co1=gb250"
        },
        {
          "id": "phytoref",
          "name": "phytoref"
        },
        {
          "id": "pr2",
          "name": "pr2"
        },
        {
          "id": "pr2=4.13.0",
          "name": "pr2=4.13.0"
        },
        {
          "id": "pr2=4.14.0",
          "name": "pr2=4.14.0"
        },
        {
          "id": "pr2=5.0.0",
          "name": "pr2=5.0.0"
        },
        {
          "id": "rdp",
          "name": "rdp"
        },
        {
          "id": "rdp=18",
          "name": "rdp=18"
        },
        {
          "id": "sbdi-gtdb",
          "name": "sbdi-gtdb"
        },
        {
          "id": "sbdi-gtdb=R06-RS202-1",
          "name": "sbdi-gtdb=R06-RS202-1"
        },
        {
          "id": "sbdi-gtdb=R06-RS202-3",
          "name": "sbdi-gtdb=R06-RS202-3"
        },
        {
          "id": "sbdi-gtdb=R07-RS207-1",
          "name": "sbdi-gtdb=R07-RS207-1"
        },
        {
          "id": "silva",
          "name": "silva"
        },
        {
          "id": "silva=132",
          "name": "silva=132"
        },
        {
          "id": "silva=138",
          "name": "silva=138"
        },
        {
          "id": "unite-alleuk",
          "name": "unite-alleuk"
        },
        {
          "id": "unite-alleuk=8.2",
          "name": "unite-alleuk=8.2"
        },
        {
          "id": "unite-alleuk=8.3",
          "name": "unite-alleuk=8.3"
        },
        {
          "id": "unite-alleuk=9.0",
          "name": "unite-alleuk=9.0"
        },
        {
          "id": "unite-fungi",
          "name": "unite-fungi"
        },
        {
          "id": "unite-fungi=8.2",
          "name": "unite-fungi=8.2"
        },
        {
          "id": "unite-fungi=8.3",
          "name": "unite-fungi=8.3"
        },
        {
          "id": "unite-fungi=9.0",
          "name": "unite-fungi=9.0"
        },
        {
          "id": "zehr-nifh",
          "name": "zehr-nifh"
        },
        {
          "id": "zehr-nifh=2.5.0",
          "name": "zehr-nifh=2.5.0"
        }
      ]
    },
    "dada_ref_tax_custom": {
      "title": "",
      "required": false,
      "description": "Path to a custom DADA2 reference taxonomy database",
      "default": "",
      "help_text": "Overwrites `--dada_ref_taxonomy`. Either `--skip_dada_addspecies` (no species annotation) or `--dada_ref_tax_custom_sp` (species annotation) is additionally required. Consider also setting `--dada_assign_taxlevels`.\n\nMust be compatible to DADA2's assignTaxonomy function: 'Can be compressed. This reference fasta file should be formatted so that the id lines correspond to the taxonomy (or classification) of the associated sequence, and each taxonomic level is separated by a semicolon.' See also https://rdrr.io/bioc/dada2/man/assignTaxonomy.html",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "dada_ref_tax_custom_sp": {
      "title": "",
      "required": false,
      "description": "Path to a custom DADA2 reference taxonomy database for species assignment",
      "default": "",
      "help_text": "Requires `--dada_ref_tax_custom`. Must be compatible to DADA2's addSpecies function: 'Can be compressed. This reference fasta file should be formatted so that the id lines correspond to the genus-species binomial of the associated sequence.' See also https://rdrr.io/bioc/dada2/man/addSpecies.html",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "dada_assign_taxlevels": {
      "title": "",
      "required": false,
      "description": "Comma separated list of taxonomic levels used in DADA2's assignTaxonomy function",
      "default": "",
      "help_text": "Typically useful when providing a custom DADA2 reference taxonomy database with `--dada_ref_tax_custom`. If DADA2's addSpecies is used (default), the last element(s) of the comma separated string must be 'Genus' or 'Genus,Species'.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "cut_dada_ref_taxonomy": {
      "title": "",
      "required": false,
      "description": "If the expected amplified sequences are extracted from the DADA2 reference taxonomy database",
      "default": "",
      "help_text": "Expected amplified sequences are extracted from the DADA2 reference taxonomy using the primer sequences, that might improve classification. This is not applied to species classification (assignSpecies) but only for lower taxonomic levels (assignTaxonomy).",
      "hidden": false,
      "type": "boolean"
    },
    "dada_addspecies_allowmultiple": {
      "title": "",
      "required": false,
      "description": "If multiple exact matches against different species are returned",
      "default": "",
      "help_text": "Defines the behavior when multiple exact matches against different species are returned. By default only unambiguous identifications are returned. If TRUE, a concatenated string of all exactly matched species is returned.",
      "hidden": false,
      "type": "boolean"
    },
    "dada_taxonomy_rc": {
      "title": "",
      "required": false,
      "description": "If reverse-complement of each sequences will be also tested for classification",
      "default": "",
      "help_text": "Reverse-complement of each sequences will be used for classification if it is a better match to the reference sequences than the forward sequence.",
      "hidden": false,
      "type": "boolean"
    },
    "pplace_tree": {
      "title": "",
      "required": false,
      "description": "Newick file with reference phylogenetic tree. Requires also `--pplace_aln` and `--pplace_model`.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "pplace_aln": {
      "title": "",
      "required": false,
      "description": "File with reference sequences. Requires also `--pplace_tree` and `--pplace_model`.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "pplace_model": {
      "title": "",
      "required": false,
      "description": "Phylogenetic model to use in placement, e.g. 'LG+F' or 'GTR+I+F'. Requires also `--pplace_tree` and `--pplace_aln`.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "pplace_alnmethod": {
      "title": "",
      "required": false,
      "description": "Method used for alignment, \"hmmer\" or \"mafft\"",
      "default": "hmmer",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "hmmer",
          "name": "hmmer"
        },
        {
          "id": "mafft",
          "name": "mafft"
        }
      ]
    },
    "pplace_taxonomy": {
      "title": "",
      "required": false,
      "description": "Tab-separated file with taxonomy assignments of reference sequences.",
      "default": "",
      "help_text": "Headerless, tab-separated, first column with tree leaves, second column with taxonomy ranks separated by semicolon `;`. The results take precedence over DADA2 and QIIME2 classifications.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "pplace_name": {
      "title": "",
      "required": false,
      "description": "A name for the run",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "qiime_ref_taxonomy": {
      "title": "",
      "required": false,
      "description": "Name of supported database, and optionally also version number",
      "default": "",
      "help_text": "Choose any of the supported databases, and optionally also specify the version. Database and version are separated by an equal sign (`=`, e.g. `silva=138`) . This will download the desired database and initiate taxonomic classification with QIIME2 and the chosen database.\n\nIf both, `--dada_ref_taxonomy` and `--qiime_ref_taxonomy` are used, DADA2 classification will be used for downstream analysis.\n\nThe following databases are supported:\n- SILVA ribosomal RNA gene database project - 16S rRNA\n- UNITE - eukaryotic nuclear ribosomal ITS region - ITS\n- Greengenes (only testing!)\n\nGenerally, using `silva`, `unite-fungi`, or `unite-alleuk` will select the most recent supported version. For testing purposes, the tiny database `greengenes85` (dereplicated at 85% sequence similarity) is available. For details on what values are valid, please either use an invalid value such as `x` (causing the pipeline to send an error message with all valid values) or see `conf/ref_databases.config`.",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "silva=138",
          "name": "silva=138"
        },
        {
          "id": "silva",
          "name": "silva"
        },
        {
          "id": "unite-fungi=8.3",
          "name": "unite-fungi=8.3"
        },
        {
          "id": "unite-fungi=8.2",
          "name": "unite-fungi=8.2"
        },
        {
          "id": "unite-fungi",
          "name": "unite-fungi"
        },
        {
          "id": "unite-alleuk=9.0",
          "name": "unite-alleuk=9.0"
        },
        {
          "id": "unite-alleuk=8.3",
          "name": "unite-alleuk=8.3"
        },
        {
          "id": "unite-alleuk=8.2",
          "name": "unite-alleuk=8.2"
        },
        {
          "id": "unite-alleuk",
          "name": "unite-alleuk"
        },
        {
          "id": "greengenes85",
          "name": "greengenes85"
        },
        {
          "id": "greengenes2",
          "name": "greengenes2"
        },
        {
          "id": "greengenes2=2022.10",
          "name": "greengenes2=2022.10"
        }
      ]
    },
    "qiime_ref_tax_custom": {
      "title": "",
      "required": false,
      "description": "Path to files of a custom QIIME2 reference taxonomy database (tarball, or two comma-separated files)",
      "default": "",
      "help_text": "Overwrites `--qiime_ref_taxonomy`. Either path to tarball (`*.tar.gz` or `*.tgz`) that contains sequence (`*.fna`) and taxonomy (`*.tax`) data, or alternatively a comma separated pair of filepaths to sequence (`*.fna`) and taxonomy (`*.tax`) data (possibly gzipped `*.gz`).",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "classifier": {
      "title": "",
      "required": false,
      "description": "Path to QIIME2 trained classifier file (typically *-classifier.qza)",
      "default": "",
      "help_text": "If you have trained a compatible classifier before, from sources such as SILVA (https://www.arb-silva.de/), Greengenes (http://greengenes.secondgenome.com/downloads) or RDP (https://rdp.cme.msu.edu/). \n\nFor example:\n\n```bash\n--classifier \"FW_primer-RV_primer-classifier.qza\"\n```\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The classifier is a Naive Bayes classifier produced by `qiime feature-classifier fit-classifier-naive-bayes` (e.g. by this pipeline)\n3. The primer pair for the amplicon PCR and the computing of the classifier are exactly the same (or full-length, potentially lower performance)\n4. The classifier has to be trained by the same version of scikit-learn as this version of the pipeline uses",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "kraken2_ref_taxonomy": {
      "title": "",
      "required": false,
      "description": "Name of supported database, and optionally also version number",
      "default": "",
      "help_text": "Choose any of the supported databases, and optionally also specify the version. Database and version are separated by an equal sign (`=`, e.g. `silve=138`) . This will download the desired database and initiate taxonomic classification with Kraken2 and the chosen database.\n\nConsider using `--kraken2_confidence` to set a confidence score threshold.\n\nThe following databases are supported:\n- RDP - Ribosomal Database Project - 16S rRNA\n- SILVA ribosomal RNA gene database project - 16S rRNA\n- Greengenes - 16S rRNA\n- Standard Kraken2 database (RefSeq archaea, bacteria, viral, plasmid, human, UniVec_Core) - any amplicon\n\nGenerally, using `rdp`, `silva`, `greengenes`, `standard` will select the most recent supported version.\n\nPlease note that commercial/non-academic entities [require licensing](https://www.arb-silva.de/silva-license-information) for SILVA v132 database (non-default) but not from v138 on.",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "silva",
          "name": "silva"
        },
        {
          "id": "silva=138",
          "name": "silva=138"
        },
        {
          "id": "silva=132",
          "name": "silva=132"
        },
        {
          "id": "rdp",
          "name": "rdp"
        },
        {
          "id": "rdp=18",
          "name": "rdp=18"
        },
        {
          "id": "greengenes",
          "name": "greengenes"
        },
        {
          "id": "greengenes=13.5",
          "name": "greengenes=13.5"
        },
        {
          "id": "standard",
          "name": "standard"
        },
        {
          "id": "standard=20230605",
          "name": "standard=20230605"
        }
      ]
    },
    "kraken2_ref_tax_custom": {
      "title": "",
      "required": false,
      "description": "Path to a custom Kraken2 reference taxonomy database (*.tar.gz|*.tgz archive or folder)",
      "default": "",
      "help_text": "Overwrites `--kraken2_ref_taxonomy`. Consider also setting `--kraken2_assign_taxlevels`. Can be compressed tar archive (.tar.gz|.tgz) or folder containing the database. See also https://benlangmead.github.io/aws-indexes/k2.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "kraken2_assign_taxlevels": {
      "title": "",
      "required": false,
      "description": "Comma separated list of taxonomic levels used in Kraken2. Will overwrite default values.",
      "default": "",
      "help_text": "Typically useful when providing a custom Kraken2 reference taxonomy database with `--kraken2_ref_tax_custom`. In case a database is given with `--kraken2_ref_taxonomy`, the default taxonomic levels will be overwritten with `--kraken2_assign_taxlevels`.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "kraken2_confidence": {
      "title": "",
      "required": false,
      "description": "Confidence score threshold for taxonomic classification.",
      "default": "",
      "help_text": "Increasing the threshold will require more k-mers to match at a taxonomic levels and reduce the taxonomic levels shown until the threshold is met.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "sintax_ref_taxonomy": {
      "title": "",
      "required": false,
      "description": "Name of supported database, and optionally also version number",
      "default": "",
      "help_text": "Choose any of the supported databases, and optionally also specify the version. Database and version are separated by an equal sign (`=`, e.g. `coidb=221216`) . This will download the desired database and initiate taxonomic classification with VSEARCH sintax and the chosen database, which if needed is formatted to produce a file that is compatible with VSEARCH sintax.\n\nThe following databases are supported:\n- COIDB - eukaryotic Cytochrome Oxidase I (COI) from The Barcode of Life Data System (BOLD) - COI\n- UNITE - eukaryotic nuclear ribosomal ITS region - ITS\n\nGenerally, using `coidb`, `unite-fungi`, or `unite-alleuk` will select the most recent supported version.",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "coidb",
          "name": "coidb"
        },
        {
          "id": "coidb=221216",
          "name": "coidb=221216"
        },
        {
          "id": "unite-fungi=9.0",
          "name": "unite-fungi=9.0"
        },
        {
          "id": "unite-fungi=8.3",
          "name": "unite-fungi=8.3"
        },
        {
          "id": "unite-fungi=8.2",
          "name": "unite-fungi=8.2"
        },
        {
          "id": "unite-fungi",
          "name": "unite-fungi"
        },
        {
          "id": "unite-alleuk=9.0",
          "name": "unite-alleuk=9.0"
        },
        {
          "id": "unite-alleuk=8.3",
          "name": "unite-alleuk=8.3"
        },
        {
          "id": "unite-alleuk=8.2",
          "name": "unite-alleuk=8.2"
        },
        {
          "id": "unite-alleuk",
          "name": "unite-alleuk"
        }
      ]
    },
    "addsh": {
      "title": "",
      "required": false,
      "description": "If ASVs should be assigned to UNITE species hypotheses (SHs). Only relevant for ITS data.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "cut_its": {
      "title": "",
      "required": false,
      "description": "Part of ITS region to use for taxonomy assignment: \"full\", \"its1\", or \"its2\"",
      "default": "none",
      "help_text": "If data is long read ITS sequences, that need to be cut to ITS region (full ITS, only ITS1, or only ITS2) for taxonomy assignment.",
      "hidden": false,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "none",
          "name": "none"
        },
        {
          "id": "full",
          "name": "full"
        },
        {
          "id": "its1",
          "name": "its1"
        },
        {
          "id": "its2",
          "name": "its2"
        }
      ]
    },
    "its_partial": {
      "title": "",
      "required": false,
      "description": "Cutoff for partial ITS sequences. Only full sequences by default.",
      "default": "",
      "help_text": "If using cut_its, this option allows partial ITS sequences, longer than the specified cutoff.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "exclude_taxa": {
      "title": "",
      "required": false,
      "description": "Comma separated list of unwanted taxa, to skip taxa filtering use \"none\"",
      "default": "mitochondria,chloroplast",
      "help_text": "Depending on the primers used, PCR might amplify unwanted or off-target DNA. By default sequences originating from mitochondria or chloroplasts are removed. The taxa specified are excluded from further analysis.\nFor example to exclude any taxa that contain mitochondria, chloroplast, or archaea:\n\n```bash\n--exclude_taxa \"mitochondria,chloroplast,archaea\"\n```\n\nIf you prefer not filtering the data, specify:\n\n```bash\n--exclude_taxa \"none\"\n```\n\nPlease note the following requirements:\n\n1. Comma separated list enclosed in quotes\n2. May not contain whitespace characters\n3. Features that contain one or several of these terms in their taxonomical classification are excluded from further analysis\n4. The taxonomy level is not taken into consideration\n5. Taxa names should be as in Taxonomic database (Default: Silva138), example: 'Bacteria', 'Armatimonadia', 'unidentified', 'p__'\n6. Taxon names are case-insensitive and partial match is possible.",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "min_frequency": {
      "title": "",
      "required": false,
      "description": "Abundance filtering",
      "default": 1,
      "help_text": "Remove entries from the feature table below an absolute abundance threshold (default: 1, meaning filter is disabled). Singletons are often regarded as artifacts, choosing a value of 2 removes sequences with less than 2 total counts from the feature table.\n\nFor example to remove singletons choose:\n\n```bash\n--min_frequency 2\n```",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "min_samples": {
      "title": "",
      "required": false,
      "description": "Prevalence filtering",
      "default": 1,
      "help_text": "Filtering low prevalent features from the feature table, e.g. keeping only features that are present in at least two samples can be achived by choosing a value of 2 (default: 1, meaning filter is disabled). Typically only used when having replicates for all samples.\n\nFor example to retain features that are present in at least two sample:\n\n```bash\n--min_samples 2\n```\n\nPlease note this is independent of abundance.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "metadata_category": {
      "title": "",
      "required": false,
      "description": "Comma separated list of metadata column headers for statistics.",
      "default": "",
      "help_text": "Here columns in the metadata sheet can be chosen with groupings that are used for diversity indices and differential abundance analysis. By default, all suitable columns in the metadata sheet will be used if this option is not specified. Suitable are columns which are categorical (not numerical) and have multiple different values which are not all unique. For example:\n\n```bash\n--metadata_category \"treatment1,treatment2\"\n```\n\nPlease note the following requirements:\n\n1. Comma separated list enclosed in quotes\n2. May not contain whitespace characters\n3. Each comma separated term has to match exactly one column name in the metadata sheet",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "metadata_category_barplot": {
      "title": "",
      "required": false,
      "description": "Comma separated list of metadata column headers for plotting average relative abundance barplots.",
      "default": "",
      "help_text": "Here columns in the metadata sheet can be chosen with groupings that are used for average relative abundance barplots. Samples that have empty fields for that column are discarded. For example:\n\n```bash\n--metadata_category_barplot \"treatment1,treatment2\"\n```\n\nPlease note the following requirements:\n\n1. Comma separated list enclosed in quotes\n2. May not contain whitespace characters\n3. Each comma separated term has to match exactly one column name in the metadata sheet",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "qiime_adonis_formula": {
      "title": "",
      "required": false,
      "description": "Formula for QIIME2 ADONIS metadata feature importance test for beta diversity distances",
      "default": "",
      "help_text": "Comma separated list of model formula(s), e.g. \"treatment1,treatment2\". Model formula should contain only independent terms in the sample metadata. These can be continuous variables or factors, and they can have interactions as in a typical R formula. Essentially, columns in the metadata sheet can be chosen that have no empty values, not only unique values, or not only identical values.\nFor example, \"treatment1+treatment2\" tests whether the data partitions based on \"treatment1\" and \"treatment2\" sample metadata. \"treatment1*treatment2\" test both of those effects as well as their interaction.\nMore examples can be found in the R documentation, https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Formulae-for-statistical-models",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "picrust": {
      "title": "",
      "required": false,
      "description": "If the functional potential of the bacterial community is predicted.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "sbdiexport": {
      "title": "",
      "required": false,
      "description": "If data should be exported in SBDI (Swedish biodiversity infrastructure) Excel format.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "diversity_rarefaction_depth": {
      "title": "",
      "required": false,
      "description": "Minimum rarefaction depth for diversity analysis. Any sample below that threshold will be removed.",
      "default": 500,
      "help_text": "",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "ancom_sample_min_count": {
      "title": "",
      "required": false,
      "description": "Minimum sample counts to retain a sample for ANCOM analysis. Any sample below that threshold will be removed.",
      "default": 1,
      "help_text": "",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "tax_agglom_min": {
      "title": "",
      "required": false,
      "description": "Minimum taxonomy agglomeration level for taxonomic classifications",
      "default": 2,
      "help_text": "Depends on the reference taxonomy database used.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "tax_agglom_max": {
      "title": "",
      "required": false,
      "description": "Maximum taxonomy agglomeration level for taxonomic classifications",
      "default": 6,
      "help_text": "Depends on the reference taxonomy database used. Most default databases have genus level at 6.",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "report_template": {
      "title": "",
      "required": false,
      "description": "Path to Markdown file (Rmd)",
      "default": "${projectDir}/assets/report_template.Rmd",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "report_css": {
      "title": "",
      "required": false,
      "description": "Path to style file (css)",
      "default": "${projectDir}/assets/nf-core_style.css",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "report_logo": {
      "title": "",
      "required": false,
      "description": "Path to logo file (png)",
      "default": "${projectDir}/assets/nf-core-ampliseq_logo_light_long.png",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "report_title": {
      "title": "",
      "required": false,
      "description": "String used as report title",
      "default": "Summary of analysis results",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "report_abstract": {
      "title": "",
      "required": false,
      "description": "Path to Markdown file (md) that replaces the 'Abstract' section",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "skip_fastqc": {
      "title": "",
      "required": false,
      "description": "Skip FastQC",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_cutadapt": {
      "title": "",
      "required": false,
      "description": "Skip primer trimming with cutadapt. This is not recommended! Use only in case primer sequences were removed before and the data does not contain any primer sequences.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_dada_quality": {
      "title": "",
      "required": false,
      "description": "Skip quality check with DADA2. Can only be skipped when `--trunclenf` and `--trunclenr` are set.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_barrnap": {
      "title": "",
      "required": false,
      "description": "Skip annotating SSU matches.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_qiime": {
      "title": "",
      "required": false,
      "description": "Skip all steps that are executed by QIIME2, including QIIME2 software download, taxonomy assignment by QIIME2, barplots, relative abundance tables, diversity analysis, differential abundance testing.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_qiime_downstream": {
      "title": "",
      "required": false,
      "description": "Skip steps that are executed by QIIME2 except for taxonomic classification. Skip steps including barplots, relative abundance tables, diversity analysis, differential abundance testing.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_taxonomy": {
      "title": "",
      "required": false,
      "description": "Skip taxonomic classification. Incompatible with `--sbdiexport`",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_dada_taxonomy": {
      "title": "",
      "required": false,
      "description": "Skip taxonomic classification with DADA2",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_dada_addspecies": {
      "title": "",
      "required": false,
      "description": "Skip species level when using DADA2 for taxonomic classification. This reduces the required memory dramatically under certain conditions. Incompatible with `--sbdiexport`",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_barplot": {
      "title": "",
      "required": false,
      "description": "Skip producing barplot",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_abundance_tables": {
      "title": "",
      "required": false,
      "description": "Skip producing any relative abundance tables",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_alpha_rarefaction": {
      "title": "",
      "required": false,
      "description": "Skip alpha rarefaction",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_diversity_indices": {
      "title": "",
      "required": false,
      "description": "Skip alpha and beta diversity analysis",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_ancom": {
      "title": "",
      "required": false,
      "description": "Skip differential abundance testing",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_multiqc": {
      "title": "",
      "required": false,
      "description": "Skip MultiQC reporting",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "skip_report": {
      "title": "",
      "required": false,
      "description": "Skip Markdown summary report",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "boolean"
    },
    "seed": {
      "title": "",
      "required": false,
      "description": "Specifies the random seed.",
      "default": 100,
      "help_text": "",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "help": {
      "title": "",
      "required": false,
      "description": "Display help text.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "boolean"
    },
    "version": {
      "title": "",
      "required": false,
      "description": "Display version and exit.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "boolean"
    },
    "publish_dir_mode": {
      "title": "",
      "required": false,
      "description": "Method used to save pipeline results to output directory.",
      "default": "copy",
      "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
      "hidden": true,
      "type": "string",
      "format": "enum",
      "enum": [
        {
          "id": "symlink",
          "name": "symlink"
        },
        {
          "id": "rellink",
          "name": "rellink"
        },
        {
          "id": "link",
          "name": "link"
        },
        {
          "id": "copy",
          "name": "copy"
        },
        {
          "id": "copyNoFollow",
          "name": "copyNoFollow"
        },
        {
          "id": "move",
          "name": "move"
        }
      ]
    },
    "email_on_fail": {
      "title": "",
      "required": false,
      "description": "Email address for completion summary, only when pipeline fails.",
      "default": "",
      "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
      "hidden": true,
      "type": "string",
      "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
    },
    "plaintext_email": {
      "title": "",
      "required": false,
      "description": "Send plain-text email instead of HTML.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "boolean"
    },
    "max_multiqc_email_size": {
      "title": "",
      "required": false,
      "description": "File size limit when attaching MultiQC reports to summary emails.",
      "default": "25.MB",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$"
    },
    "monochrome_logs": {
      "title": "",
      "required": false,
      "description": "Do not use coloured log outputs.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "boolean"
    },
    "hook_url": {
      "title": "",
      "required": false,
      "description": "Incoming hook URL for messaging service",
      "default": "",
      "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "multiqc_config": {
      "title": "",
      "required": false,
      "description": "Custom config file to supply to MultiQC.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "format": "file"
    },
    "multiqc_logo": {
      "title": "",
      "required": false,
      "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "multiqc_methods_description": {
      "title": "",
      "required": false,
      "description": "Custom MultiQC yaml file containing HTML including a methods description.",
      "default": "",
      "help_text": "",
      "hidden": false,
      "type": "string",
      "pattern": ""
    },
    "validate_params": {
      "title": "",
      "required": false,
      "description": "Boolean whether to validate parameters against the schema at runtime",
      "default": true,
      "help_text": "",
      "hidden": true,
      "type": "boolean"
    },
    "validationShowHiddenParams": {
      "title": "",
      "required": false,
      "description": "Show all params when using `--help`",
      "default": "",
      "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters.",
      "hidden": true,
      "type": "boolean"
    },
    "validationFailUnrecognisedParams": {
      "title": "",
      "required": false,
      "description": "Validation of parameters fails when an unrecognised parameter is found.",
      "default": "",
      "help_text": "By default, when an unrecognised parameter is found, it returns a warning.",
      "hidden": true,
      "type": "boolean"
    },
    "validationLenientMode": {
      "title": "",
      "required": false,
      "description": "Validation of parameters in lenient more.",
      "default": "",
      "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode).",
      "hidden": true,
      "type": "boolean"
    },
    "max_cpus": {
      "title": "",
      "required": false,
      "description": "Maximum number of CPUs that can be requested for any single job.",
      "default": 16,
      "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`",
      "hidden": false,
      "type": "integer",
      "minimum": "",
      "maximum": ""
    },
    "max_memory": {
      "title": "",
      "required": false,
      "description": "Maximum amount of memory that can be requested for any single job.",
      "default": "128.GB",
      "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`",
      "hidden": false,
      "type": "string",
      "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$"
    },
    "max_time": {
      "title": "",
      "required": false,
      "description": "Maximum amount of time that can be requested for any single job.",
      "default": "240.h",
      "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`",
      "hidden": false,
      "type": "string",
      "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$"
    },
    "custom_config_version": {
      "title": "",
      "required": false,
      "description": "Git commit id for Institutional configs.",
      "default": "master",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "custom_config_base": {
      "title": "",
      "required": false,
      "description": "Base directory for Institutional configs.",
      "default": "https://raw.githubusercontent.com/nf-core/configs/master",
      "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "config_profile_name": {
      "title": "",
      "required": false,
      "description": "Institutional config name.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "config_profile_description": {
      "title": "",
      "required": false,
      "description": "Institutional config description.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "config_profile_contact": {
      "title": "",
      "required": false,
      "description": "Institutional config contact information.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "config_profile_url": {
      "title": "",
      "required": false,
      "description": "Institutional config URL link.",
      "default": "",
      "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters.",
      "hidden": true,
      "type": "string",
      "pattern": ""
    },
    "multiqc_title": {
      "title": "",
      "required": false,
      "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
      "default": "",
      "help_text": "",
      "hidden": true,
      "type": "string",
      "pattern": ""
    }
  },
  "ui": {
    "inputs": [
      {
        "id": "main_arguments",
        "title": "Main arguments",
        "description": "",
        "fields": [
          "input",
          "input_fasta",
          "input_folder",
          "FW_primer",
          "RV_primer",
          "metadata",
          "outdir",
          "email"
        ]
      },
      {
        "id": "sequencing_input",
        "title": "Sequencing input",
        "description": "",
        "fields": [
          "illumina_novaseq",
          "pacbio",
          "iontorrent",
          "single_end",
          "illumina_pe_its",
          "multiple_sequencing_runs",
          "extension",
          "min_read_counts",
          "ignore_empty_input_files"
        ]
      },
      {
        "id": "primer_removal",
        "title": "Primer removal",
        "description": "",
        "fields": [
          "retain_untrimmed",
          "cutadapt_min_overlap",
          "cutadapt_max_error_rate",
          "double_primer",
          "ignore_failed_trimming"
        ]
      },
      {
        "id": "read_trimming_and_quality_filtering",
        "title": "Read trimming and quality filtering",
        "description": "",
        "fields": [
          "trunclenf",
          "trunclenr",
          "trunc_qmin",
          "trunc_rmin",
          "max_ee",
          "min_len",
          "max_len",
          "ignore_failed_filtering"
        ]
      },
      {
        "id": "amplicon_sequence_variants_asv_calculation",
        "title": "Amplicon Sequence Variants (ASV) calculation",
        "description": "",
        "fields": [
          "sample_inference",
          "concatenate_reads"
        ]
      },
      {
        "id": "asv_post_processing",
        "title": "ASV post processing",
        "description": "",
        "fields": [
          "vsearch_cluster",
          "vsearch_cluster_id",
          "filter_ssu",
          "min_len_asv",
          "max_len_asv",
          "filter_codons",
          "orf_start",
          "orf_end",
          "stop_codons"
        ]
      },
      {
        "id": "taxonomic_database",
        "title": "Taxonomic database",
        "description": "",
        "fields": [
          "dada_ref_taxonomy",
          "dada_ref_tax_custom",
          "dada_ref_tax_custom_sp",
          "dada_assign_taxlevels",
          "cut_dada_ref_taxonomy",
          "dada_addspecies_allowmultiple",
          "dada_taxonomy_rc",
          "pplace_tree",
          "pplace_aln",
          "pplace_model",
          "pplace_alnmethod",
          "pplace_taxonomy",
          "pplace_name",
          "qiime_ref_taxonomy",
          "qiime_ref_tax_custom",
          "classifier",
          "kraken2_ref_taxonomy",
          "kraken2_ref_tax_custom",
          "kraken2_assign_taxlevels",
          "kraken2_confidence",
          "sintax_ref_taxonomy",
          "addsh",
          "cut_its",
          "its_partial"
        ]
      },
      {
        "id": "asv_filtering",
        "title": "ASV filtering",
        "description": "",
        "fields": [
          "exclude_taxa",
          "min_frequency",
          "min_samples"
        ]
      },
      {
        "id": "downstream_analysis",
        "title": "Downstream analysis",
        "description": "",
        "fields": [
          "metadata_category",
          "metadata_category_barplot",
          "qiime_adonis_formula",
          "picrust",
          "sbdiexport",
          "diversity_rarefaction_depth",
          "ancom_sample_min_count",
          "tax_agglom_min",
          "tax_agglom_max"
        ]
      },
      {
        "id": "pipeline_report",
        "title": "Pipeline summary report",
        "description": "",
        "fields": [
          "report_template",
          "report_css",
          "report_logo",
          "report_title",
          "report_abstract"
        ]
      },
      {
        "id": "skipping_specific_steps",
        "title": "Skipping specific steps",
        "description": "",
        "fields": [
          "skip_fastqc",
          "skip_cutadapt",
          "skip_dada_quality",
          "skip_barrnap",
          "skip_qiime",
          "skip_qiime_downstream",
          "skip_taxonomy",
          "skip_dada_taxonomy",
          "skip_dada_addspecies",
          "skip_barplot",
          "skip_abundance_tables",
          "skip_alpha_rarefaction",
          "skip_diversity_indices",
          "skip_ancom",
          "skip_multiqc",
          "skip_report"
        ]
      },
      {
        "id": "generic_options",
        "title": "Generic options",
        "description": "Less common options for the pipeline, typically set in a config file.",
        "fields": [
          "seed",
          "help",
          "version",
          "publish_dir_mode",
          "email_on_fail",
          "plaintext_email",
          "max_multiqc_email_size",
          "monochrome_logs",
          "hook_url",
          "multiqc_config",
          "multiqc_logo",
          "multiqc_methods_description",
          "validate_params",
          "validationShowHiddenParams",
          "validationFailUnrecognisedParams",
          "validationLenientMode"
        ]
      },
      {
        "id": "max_job_request_options",
        "title": "Max job request options",
        "description": "Set the top limit for requested resources for any single job.",
        "fields": [
          "max_cpus",
          "max_memory",
          "max_time"
        ]
      },
      {
        "id": "institutional_config_options",
        "title": "Institutional config options",
        "description": "Parameters used to describe centralised config profiles. These should not be edited.",
        "fields": [
          "custom_config_version",
          "custom_config_base",
          "config_profile_name",
          "config_profile_description",
          "config_profile_contact",
          "config_profile_url",
          "multiqc_title"
        ]
      }
    ]
  }
}